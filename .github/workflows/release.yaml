name: release

# Run workflow on commits to the `main` branch
on:
  workflow_dispatch:
    inputs:
      snapshot-build:
        description: "Snapshot build (y/n)?"
        required: true
        default: "y"
      release-tag:
        description: "Release Tag (only if not snapshot)"
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Java and Maven
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: "temurin"

      - name: Remove SNAPSHOT
        if: github.event.inputs.snapshot-build == 'n'
        run: |
          mvn versions:set --batch-mode -DnewVersion=${{ github.event.inputs.release-tag }} -DprocessAllModules
      - name: Build with Maven
        run: mvn -B verify "-Dspring-boot.run.jvmArguments=-Dfile.encoding=UTF-8"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_KEY }}

      - name: Build and push app
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: itatm/dave-frontend:${{ github.event.inputs.release-tag }},itatm/dave-frontend:latest

  github-release:
    needs: release
    name: Create Release
    if: github.event.inputs.snapshot-build == 'n'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ github.event.inputs.release-tag }}',
              sha: context.sha
            })
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.release-tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_KEY }}
          repository: itatm/dave-frontend
          readme-filepath: ./IMAGE_README.md
          short-description: ${{ github.event.repository.description }}

